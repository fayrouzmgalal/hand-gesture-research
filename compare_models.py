# -*- coding: utf-8 -*-
"""compare_models

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TuQsqDTz9hGYB9Rf3-fLw3ezDpDWFPiZ
"""

import mlflow
from mlflow.tracking import MlflowClient
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import os

# ==== CONFIGURATION ====
EXPERIMENT_NAME = "hand_gesture_classification"
METRIC_NAME = "accuracy"
PARAM_MODEL_NAME = "model"

# ==== SETUP ====
client = MlflowClient()
experiment = client.get_experiment_by_name(EXPERIMENT_NAME)

if not experiment:
    raise ValueError(f"Experiment '{EXPERIMENT_NAME}' not found.")

# ==== COLLECT RUN DATA ====
runs = client.search_runs(experiment.experiment_id)
data = []

for run in runs:
    accuracy = run.data.metrics.get(METRIC_NAME)
    model_type = run.data.params.get(PARAM_MODEL_NAME)

    if accuracy is not None and model_type is not None:
        data.append({
            "run_id": run.info.run_id,
            "model_type": model_type,
            "accuracy": accuracy
        })

df = pd.DataFrame(data)

if df.empty:
    raise ValueError("No valid runs found with the required metrics and params.")

# ==== PLOT ====
plt.figure(figsize=(8, 5))
sns.barplot(x="model_type", y="accuracy", data=df)
plt.title("Model Accuracy Comparison")
plt.xlabel("Model Type")
plt.ylabel("Accuracy")
plt.ylim(0, 1)
plt.tight_layout()

# ==== SAVE PLOT ====
output_path = "model_comparison.png"
plt.savefig(output_path)
print(f"Saved plot to {output_path}")

# ==== LOG TO MLFLOW ====
with mlflow.start_run(run_name="model_comparison_plot"):
    mlflow.log_artifact(output_path)
    print("Logged plot to MLflow as artifact.")